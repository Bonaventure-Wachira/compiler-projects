Terminals unused in grammar

    OROP
    NOTOP


Grammar

    0 $accept: function $end

    1 function: function_header variables body

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';'

    3 optional_parameters: parameters
    4                    | %empty

    5 parameters: parameter_declaration
    6           | parameter_declaration ',' parameters

    7 parameter_declaration: IDENTIFIER ':' type

    8 variables: variable variables
    9          | %empty

   10 variable: IDENTIFIER ':' type IS statement_

   11 type: INTEGER
   12     | BOOLEAN
   13     | REAL

   14 body: BEGIN_ statement_ END ';'

   15 statement_: statement ';'
   16           | error ';'

   17 statement: expression
   18          | REDUCE operator reductions ENDREDUCE
   19          | if_statement
   20          | case_statement

   21 if_statement: IF expression THEN statement_ ELSE statement_ ENDIF

   22 case_statement: CASE IDENTIFIER IS case_clauses ENDCASE

   23 case_clauses: when_clause case_clauses
   24             | others_clause
   25             | %empty

   26 when_clause: WHEN INT_LITERAL ARROW statement_

   27 others_clause: OTHERS ARROW statement_

   28 operator: ADDOP
   29         | MULOP
   30         | REMOP

   31 reductions: reductions statement_
   32           | %empty

   33 expression: expression ANDOP relation
   34           | relation

   35 relation: relation RELOP term
   36         | term

   37 term: term ADDOP factor
   38     | factor

   39 factor: factor MULOP power
   40       | power

   41 power: primary EXPOP power
   42      | primary

   43 primary: '(' expression ')'
   44        | INT_LITERAL
   45        | IDENTIFIER
   46        | REAL_LITERAL
   47        | BOOL_LITERAL


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 43
    ')' (41) 43
    ',' (44) 6
    ':' (58) 7 10
    ';' (59) 2 14 15 16
    error (256) 16
    IDENTIFIER (258) 2 7 10 22 45
    INT_LITERAL (259) 26 44
    ADDOP (260) 28 37
    MULOP (261) 29 39
    RELOP (262) 35
    ANDOP (263) 33
    BEGIN_ (264) 14
    BOOLEAN (265) 12
    END (266) 14
    ENDREDUCE (267) 18
    FUNCTION (268) 2
    INTEGER (269) 11
    IS (270) 10 22
    REDUCE (271) 18
    RETURNS (272) 2
    ARROW (273) 26 27
    REMOP (274) 30
    EXPOP (275) 41
    OROP (276)
    NOTOP (277)
    CASE (278) 22
    ELSE (279) 21
    ENDCASE (280) 22
    ENDIF (281) 21
    IF (282) 21
    OTHERS (283) 27
    REAL (284) 13
    THEN (285) 21
    WHEN (286) 26
    BOOL_LITERAL (287) 47
    REAL_LITERAL (288) 46


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2
        on right: 1
    optional_parameters (42)
        on left: 3 4
        on right: 2
    parameters (43)
        on left: 5 6
        on right: 3 6
    parameter_declaration (44)
        on left: 7
        on right: 5 6
    variables (45)
        on left: 8 9
        on right: 1 8
    variable (46)
        on left: 10
        on right: 8
    type (47)
        on left: 11 12 13
        on right: 2 7 10
    body (48)
        on left: 14
        on right: 1
    statement_ (49)
        on left: 15 16
        on right: 10 14 21 26 27 31
    statement (50)
        on left: 17 18 19 20
        on right: 15
    if_statement (51)
        on left: 21
        on right: 19
    case_statement (52)
        on left: 22
        on right: 20
    case_clauses (53)
        on left: 23 24 25
        on right: 22 23
    when_clause (54)
        on left: 26
        on right: 23
    others_clause (55)
        on left: 27
        on right: 24
    operator (56)
        on left: 28 29 30
        on right: 18
    reductions (57)
        on left: 31 32
        on right: 18 31
    expression (58)
        on left: 33 34
        on right: 17 21 33 43
    relation (59)
        on left: 35 36
        on right: 33 34 35
    term (60)
        on left: 37 38
        on right: 35 36 37
    factor (61)
        on left: 39 40
        on right: 37 38 39
    power (62)
        on left: 41 42
        on right: 39 40 41
    primary (63)
        on left: 43 44 45 46 47
        on right: 41 42


State 0

    0 $accept: . function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION . IDENTIFIER optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function . $end

    $end  shift, and go to state 5


State 3

    1 function: function_header . variables body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 9 (variables)

    variables  go to state 7
    variable   go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER . optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 4 (optional_parameters)

    optional_parameters    go to state 10
    parameters             go to state 11
    parameter_declaration  go to state 12


State 5

    0 $accept: function $end .

    $default  accept


State 6

   10 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 13


State 7

    1 function: function_header variables . body

    BEGIN_  shift, and go to state 14

    body  go to state 15


State 8

    8 variables: variable . variables

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 9 (variables)

    variables  go to state 16
    variable   go to state 8


State 9

    7 parameter_declaration: IDENTIFIER . ':' type

    ':'  shift, and go to state 17


State 10

    2 function_header: FUNCTION IDENTIFIER optional_parameters . RETURNS type ';'

    RETURNS  shift, and go to state 18


State 11

    3 optional_parameters: parameters .

    $default  reduce using rule 3 (optional_parameters)


State 12

    5 parameters: parameter_declaration .
    6           | parameter_declaration . ',' parameters

    ','  shift, and go to state 19

    $default  reduce using rule 5 (parameters)


State 13

   10 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 23


State 14

   14 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REDUCE        shift, and go to state 27
    CASE          shift, and go to state 28
    IF            shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement_      go to state 33
    statement       go to state 34
    if_statement    go to state 35
    case_statement  go to state 36
    expression      go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    power           go to state 41
    primary         go to state 42


State 15

    1 function: function_header variables body .

    $default  reduce using rule 1 (function)


State 16

    8 variables: variable variables .

    $default  reduce using rule 8 (variables)


State 17

    7 parameter_declaration: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 43


State 18

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS . type ';'

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 44


State 19

    6 parameters: parameter_declaration ',' . parameters

    IDENTIFIER  shift, and go to state 9

    parameters             go to state 45
    parameter_declaration  go to state 12


State 20

   12 type: BOOLEAN .

    $default  reduce using rule 12 (type)


State 21

   11 type: INTEGER .

    $default  reduce using rule 11 (type)


State 22

   13 type: REAL .

    $default  reduce using rule 13 (type)


State 23

   10 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 46


State 24

   16 statement_: error . ';'

    ';'  shift, and go to state 47


State 25

   45 primary: IDENTIFIER .

    $default  reduce using rule 45 (primary)


State 26

   44 primary: INT_LITERAL .

    $default  reduce using rule 44 (primary)


State 27

   18 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 48
    MULOP  shift, and go to state 49
    REMOP  shift, and go to state 50

    operator  go to state 51


State 28

   22 case_statement: CASE . IDENTIFIER IS case_clauses ENDCASE

    IDENTIFIER  shift, and go to state 52


State 29

   21 if_statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression  go to state 53
    relation    go to state 38
    term        go to state 39
    factor      go to state 40
    power       go to state 41
    primary     go to state 42


State 30

   47 primary: BOOL_LITERAL .

    $default  reduce using rule 47 (primary)


State 31

   46 primary: REAL_LITERAL .

    $default  reduce using rule 46 (primary)


State 32

   43 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression  go to state 54
    relation    go to state 38
    term        go to state 39
    factor      go to state 40
    power       go to state 41
    primary     go to state 42


State 33

   14 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 55


State 34

   15 statement_: statement . ';'

    ';'  shift, and go to state 56


State 35

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 36

   20 statement: case_statement .

    $default  reduce using rule 20 (statement)


State 37

   17 statement: expression .
   33 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 57

    $default  reduce using rule 17 (statement)


State 38

   34 expression: relation .
   35 relation: relation . RELOP term

    RELOP  shift, and go to state 58

    $default  reduce using rule 34 (expression)


State 39

   36 relation: term .
   37 term: term . ADDOP factor

    ADDOP  shift, and go to state 59

    $default  reduce using rule 36 (relation)


State 40

   38 term: factor .
   39 factor: factor . MULOP power

    MULOP  shift, and go to state 60

    $default  reduce using rule 38 (term)


State 41

   40 factor: power .

    $default  reduce using rule 40 (factor)


State 42

   41 power: primary . EXPOP power
   42      | primary .

    EXPOP  shift, and go to state 61

    $default  reduce using rule 42 (power)


State 43

    7 parameter_declaration: IDENTIFIER ':' type .

    $default  reduce using rule 7 (parameter_declaration)


State 44

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type . ';'

    ';'  shift, and go to state 62


State 45

    6 parameters: parameter_declaration ',' parameters .

    $default  reduce using rule 6 (parameters)


State 46

   10 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REDUCE        shift, and go to state 27
    CASE          shift, and go to state 28
    IF            shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement_      go to state 63
    statement       go to state 34
    if_statement    go to state 35
    case_statement  go to state 36
    expression      go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    power           go to state 41
    primary         go to state 42


State 47

   16 statement_: error ';' .

    $default  reduce using rule 16 (statement_)


State 48

   28 operator: ADDOP .

    $default  reduce using rule 28 (operator)


State 49

   29 operator: MULOP .

    $default  reduce using rule 29 (operator)


State 50

   30 operator: REMOP .

    $default  reduce using rule 30 (operator)


State 51

   18 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 32 (reductions)

    reductions  go to state 64


State 52

   22 case_statement: CASE IDENTIFIER . IS case_clauses ENDCASE

    IS  shift, and go to state 65


State 53

   21 if_statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   33 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 57
    THEN   shift, and go to state 66


State 54

   33 expression: expression . ANDOP relation
   43 primary: '(' expression . ')'

    ANDOP  shift, and go to state 57
    ')'    shift, and go to state 67


State 55

   14 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 68


State 56

   15 statement_: statement ';' .

    $default  reduce using rule 15 (statement_)


State 57

   33 expression: expression ANDOP . relation

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    relation  go to state 69
    term      go to state 39
    factor    go to state 40
    power     go to state 41
    primary   go to state 42


State 58

   35 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    term     go to state 70
    factor   go to state 40
    power    go to state 41
    primary  go to state 42


State 59

   37 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    factor   go to state 71
    power    go to state 41
    primary  go to state 42


State 60

   39 factor: factor MULOP . power

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    power    go to state 72
    primary  go to state 42


State 61

   41 power: primary EXPOP . power

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    power    go to state 73
    primary  go to state 42


State 62

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 63

   10 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 10 (variable)


State 64

   18 statement: REDUCE operator reductions . ENDREDUCE
   31 reductions: reductions . statement_

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    ENDREDUCE     shift, and go to state 74
    REDUCE        shift, and go to state 27
    CASE          shift, and go to state 28
    IF            shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement_      go to state 75
    statement       go to state 34
    if_statement    go to state 35
    case_statement  go to state 36
    expression      go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    power           go to state 41
    primary         go to state 42


State 65

   22 case_statement: CASE IDENTIFIER IS . case_clauses ENDCASE

    OTHERS  shift, and go to state 76
    WHEN    shift, and go to state 77

    $default  reduce using rule 25 (case_clauses)

    case_clauses   go to state 78
    when_clause    go to state 79
    others_clause  go to state 80


State 66

   21 if_statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REDUCE        shift, and go to state 27
    CASE          shift, and go to state 28
    IF            shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement_      go to state 81
    statement       go to state 34
    if_statement    go to state 35
    case_statement  go to state 36
    expression      go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    power           go to state 41
    primary         go to state 42


State 67

   43 primary: '(' expression ')' .

    $default  reduce using rule 43 (primary)


State 68

   14 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 14 (body)


State 69

   33 expression: expression ANDOP relation .
   35 relation: relation . RELOP term

    RELOP  shift, and go to state 58

    $default  reduce using rule 33 (expression)


State 70

   35 relation: relation RELOP term .
   37 term: term . ADDOP factor

    ADDOP  shift, and go to state 59

    $default  reduce using rule 35 (relation)


State 71

   37 term: term ADDOP factor .
   39 factor: factor . MULOP power

    MULOP  shift, and go to state 60

    $default  reduce using rule 37 (term)


State 72

   39 factor: factor MULOP power .

    $default  reduce using rule 39 (factor)


State 73

   41 power: primary EXPOP power .

    $default  reduce using rule 41 (power)


State 74

   18 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 18 (statement)


State 75

   31 reductions: reductions statement_ .

    $default  reduce using rule 31 (reductions)


State 76

   27 others_clause: OTHERS . ARROW statement_

    ARROW  shift, and go to state 82


State 77

   26 when_clause: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 83


State 78

   22 case_statement: CASE IDENTIFIER IS case_clauses . ENDCASE

    ENDCASE  shift, and go to state 84


State 79

   23 case_clauses: when_clause . case_clauses

    OTHERS  shift, and go to state 76
    WHEN    shift, and go to state 77

    $default  reduce using rule 25 (case_clauses)

    case_clauses   go to state 85
    when_clause    go to state 79
    others_clause  go to state 80


State 80

   24 case_clauses: others_clause .

    $default  reduce using rule 24 (case_clauses)


State 81

   21 if_statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 86


State 82

   27 others_clause: OTHERS ARROW . statement_

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REDUCE        shift, and go to state 27
    CASE          shift, and go to state 28
    IF            shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement_      go to state 87
    statement       go to state 34
    if_statement    go to state 35
    case_statement  go to state 36
    expression      go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    power           go to state 41
    primary         go to state 42


State 83

   26 when_clause: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 88


State 84

   22 case_statement: CASE IDENTIFIER IS case_clauses ENDCASE .

    $default  reduce using rule 22 (case_statement)


State 85

   23 case_clauses: when_clause case_clauses .

    $default  reduce using rule 23 (case_clauses)


State 86

   21 if_statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REDUCE        shift, and go to state 27
    CASE          shift, and go to state 28
    IF            shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement_      go to state 89
    statement       go to state 34
    if_statement    go to state 35
    case_statement  go to state 36
    expression      go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    power           go to state 41
    primary         go to state 42


State 87

   27 others_clause: OTHERS ARROW statement_ .

    $default  reduce using rule 27 (others_clause)


State 88

   26 when_clause: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REDUCE        shift, and go to state 27
    CASE          shift, and go to state 28
    IF            shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement_      go to state 90
    statement       go to state 34
    if_statement    go to state 35
    case_statement  go to state 36
    expression      go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    power           go to state 41
    primary         go to state 42


State 89

   21 if_statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 91


State 90

   26 when_clause: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 26 (when_clause)


State 91

   21 if_statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 21 (if_statement)
