Terminals unused in grammar

    REMOP
    EXPOP
    OROP
    NOTOP


Grammar

    0 $accept: function $end

    1 function: function_header variables body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 variables: variable variables
    4          | %empty

    5 variable: IDENTIFIER ':' type IS statement_

    6 type: INTEGER
    7     | BOOLEAN
    8     | REAL

    9 body: BEGIN_ statement_ END ';'

   10 statement_: statement ';'
   11           | error ';'

   12 statement: expression
   13          | REDUCE operator reductions ENDREDUCE
   14          | if_statement
   15          | case_statement

   16 if_statement: IF expression THEN statement_ ELSE statement_ ENDIF

   17 case_statement: CASE IDENTIFIER IS case_clauses ENDCASE

   18 case_clauses: when_clause case_clauses
   19             | others_clause
   20             | %empty

   21 when_clause: WHEN INT_LITERAL ARROW statement_

   22 others_clause: OTHERS ARROW statement_

   23 operator: ADDOP
   24         | MULOP

   25 reductions: reductions statement_
   26           | %empty

   27 expression: expression ANDOP relation
   28           | relation

   29 relation: relation RELOP term
   30         | term

   31 term: term ADDOP factor
   32     | factor

   33 factor: factor MULOP primary
   34       | primary

   35 primary: '(' expression ')'
   36        | INT_LITERAL
   37        | IDENTIFIER
   38        | REAL_LITERAL
   39        | BOOL_LITERAL


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 35
    ')' (41) 35
    ':' (58) 5
    ';' (59) 2 9 10 11
    error (256) 11
    IDENTIFIER (258) 2 5 17 37
    INT_LITERAL (259) 21 36
    ADDOP (260) 23 31
    MULOP (261) 24 33
    RELOP (262) 29
    ANDOP (263) 27
    BEGIN_ (264) 9
    BOOLEAN (265) 7
    END (266) 9
    ENDREDUCE (267) 13
    FUNCTION (268) 2
    INTEGER (269) 6
    IS (270) 5 17
    REDUCE (271) 13
    RETURNS (272) 2
    ARROW (273) 21 22
    REMOP (274)
    EXPOP (275)
    OROP (276)
    NOTOP (277)
    CASE (278) 17
    ELSE (279) 16
    ENDCASE (280) 17
    ENDIF (281) 16
    IF (282) 16
    OTHERS (283) 22
    REAL (284) 8
    THEN (285) 16
    WHEN (286) 21
    BOOL_LITERAL (287) 39
    REAL_LITERAL (288) 38


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    function (39)
        on left: 1
        on right: 0
    function_header (40)
        on left: 2
        on right: 1
    variables (41)
        on left: 3 4
        on right: 1 3
    variable (42)
        on left: 5
        on right: 3
    type (43)
        on left: 6 7 8
        on right: 2 5
    body (44)
        on left: 9
        on right: 1
    statement_ (45)
        on left: 10 11
        on right: 5 9 16 21 22 25
    statement (46)
        on left: 12 13 14 15
        on right: 10
    if_statement (47)
        on left: 16
        on right: 14
    case_statement (48)
        on left: 17
        on right: 15
    case_clauses (49)
        on left: 18 19 20
        on right: 17 18
    when_clause (50)
        on left: 21
        on right: 18
    others_clause (51)
        on left: 22
        on right: 19
    operator (52)
        on left: 23 24
        on right: 13
    reductions (53)
        on left: 25 26
        on right: 13 25
    expression (54)
        on left: 27 28
        on right: 12 16 27 35
    relation (55)
        on left: 29 30
        on right: 27 28 29
    term (56)
        on left: 31 32
        on right: 29 30 31
    factor (57)
        on left: 33 34
        on right: 31 32 33
    primary (58)
        on left: 35 36 37 38 39
        on right: 33 34


State 0

    0 $accept: . function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION . IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function . $end

    $end  shift, and go to state 5


State 3

    1 function: function_header . variables body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (variables)

    variables  go to state 7
    variable   go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER . RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end .

    $default  accept


State 6

    5 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 10


State 7

    1 function: function_header variables . body

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    3 variables: variable . variables

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (variables)

    variables  go to state 13
    variable   go to state 8


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS . type ';'

    BOOLEAN  shift, and go to state 14
    INTEGER  shift, and go to state 15
    REAL     shift, and go to state 16

    type  go to state 17


State 10

    5 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 14
    INTEGER  shift, and go to state 15
    REAL     shift, and go to state 16

    type  go to state 18


State 11

    9 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REDUCE        shift, and go to state 22
    CASE          shift, and go to state 23
    IF            shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 28
    statement       go to state 29
    if_statement    go to state 30
    case_statement  go to state 31
    expression      go to state 32
    relation        go to state 33
    term            go to state 34
    factor          go to state 35
    primary         go to state 36


State 12

    1 function: function_header variables body .

    $default  reduce using rule 1 (function)


State 13

    3 variables: variable variables .

    $default  reduce using rule 3 (variables)


State 14

    7 type: BOOLEAN .

    $default  reduce using rule 7 (type)


State 15

    6 type: INTEGER .

    $default  reduce using rule 6 (type)


State 16

    8 type: REAL .

    $default  reduce using rule 8 (type)


State 17

    2 function_header: FUNCTION IDENTIFIER RETURNS type . ';'

    ';'  shift, and go to state 37


State 18

    5 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 38


State 19

   11 statement_: error . ';'

    ';'  shift, and go to state 39


State 20

   37 primary: IDENTIFIER .

    $default  reduce using rule 37 (primary)


State 21

   36 primary: INT_LITERAL .

    $default  reduce using rule 36 (primary)


State 22

   13 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 40
    MULOP  shift, and go to state 41

    operator  go to state 42


State 23

   17 case_statement: CASE . IDENTIFIER IS case_clauses ENDCASE

    IDENTIFIER  shift, and go to state 43


State 24

   16 if_statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    expression  go to state 44
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    primary     go to state 36


State 25

   39 primary: BOOL_LITERAL .

    $default  reduce using rule 39 (primary)


State 26

   38 primary: REAL_LITERAL .

    $default  reduce using rule 38 (primary)


State 27

   35 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    expression  go to state 45
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    primary     go to state 36


State 28

    9 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 46


State 29

   10 statement_: statement . ';'

    ';'  shift, and go to state 47


State 30

   14 statement: if_statement .

    $default  reduce using rule 14 (statement)


State 31

   15 statement: case_statement .

    $default  reduce using rule 15 (statement)


State 32

   12 statement: expression .
   27 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 48

    $default  reduce using rule 12 (statement)


State 33

   28 expression: relation .
   29 relation: relation . RELOP term

    RELOP  shift, and go to state 49

    $default  reduce using rule 28 (expression)


State 34

   30 relation: term .
   31 term: term . ADDOP factor

    ADDOP  shift, and go to state 50

    $default  reduce using rule 30 (relation)


State 35

   32 term: factor .
   33 factor: factor . MULOP primary

    MULOP  shift, and go to state 51

    $default  reduce using rule 32 (term)


State 36

   34 factor: primary .

    $default  reduce using rule 34 (factor)


State 37

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 38

    5 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REDUCE        shift, and go to state 22
    CASE          shift, and go to state 23
    IF            shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 52
    statement       go to state 29
    if_statement    go to state 30
    case_statement  go to state 31
    expression      go to state 32
    relation        go to state 33
    term            go to state 34
    factor          go to state 35
    primary         go to state 36


State 39

   11 statement_: error ';' .

    $default  reduce using rule 11 (statement_)


State 40

   23 operator: ADDOP .

    $default  reduce using rule 23 (operator)


State 41

   24 operator: MULOP .

    $default  reduce using rule 24 (operator)


State 42

   13 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 26 (reductions)

    reductions  go to state 53


State 43

   17 case_statement: CASE IDENTIFIER . IS case_clauses ENDCASE

    IS  shift, and go to state 54


State 44

   16 if_statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   27 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 48
    THEN   shift, and go to state 55


State 45

   27 expression: expression . ANDOP relation
   35 primary: '(' expression . ')'

    ANDOP  shift, and go to state 48
    ')'    shift, and go to state 56


State 46

    9 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 57


State 47

   10 statement_: statement ';' .

    $default  reduce using rule 10 (statement_)


State 48

   27 expression: expression ANDOP . relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    relation  go to state 58
    term      go to state 34
    factor    go to state 35
    primary   go to state 36


State 49

   29 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    term     go to state 59
    factor   go to state 35
    primary  go to state 36


State 50

   31 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    factor   go to state 60
    primary  go to state 36


State 51

   33 factor: factor MULOP . primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    primary  go to state 61


State 52

    5 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 5 (variable)


State 53

   13 statement: REDUCE operator reductions . ENDREDUCE
   25 reductions: reductions . statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    ENDREDUCE     shift, and go to state 62
    REDUCE        shift, and go to state 22
    CASE          shift, and go to state 23
    IF            shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 63
    statement       go to state 29
    if_statement    go to state 30
    case_statement  go to state 31
    expression      go to state 32
    relation        go to state 33
    term            go to state 34
    factor          go to state 35
    primary         go to state 36


State 54

   17 case_statement: CASE IDENTIFIER IS . case_clauses ENDCASE

    OTHERS  shift, and go to state 64
    WHEN    shift, and go to state 65

    $default  reduce using rule 20 (case_clauses)

    case_clauses   go to state 66
    when_clause    go to state 67
    others_clause  go to state 68


State 55

   16 if_statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REDUCE        shift, and go to state 22
    CASE          shift, and go to state 23
    IF            shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 69
    statement       go to state 29
    if_statement    go to state 30
    case_statement  go to state 31
    expression      go to state 32
    relation        go to state 33
    term            go to state 34
    factor          go to state 35
    primary         go to state 36


State 56

   35 primary: '(' expression ')' .

    $default  reduce using rule 35 (primary)


State 57

    9 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 9 (body)


State 58

   27 expression: expression ANDOP relation .
   29 relation: relation . RELOP term

    RELOP  shift, and go to state 49

    $default  reduce using rule 27 (expression)


State 59

   29 relation: relation RELOP term .
   31 term: term . ADDOP factor

    ADDOP  shift, and go to state 50

    $default  reduce using rule 29 (relation)


State 60

   31 term: term ADDOP factor .
   33 factor: factor . MULOP primary

    MULOP  shift, and go to state 51

    $default  reduce using rule 31 (term)


State 61

   33 factor: factor MULOP primary .

    $default  reduce using rule 33 (factor)


State 62

   13 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 13 (statement)


State 63

   25 reductions: reductions statement_ .

    $default  reduce using rule 25 (reductions)


State 64

   22 others_clause: OTHERS . ARROW statement_

    ARROW  shift, and go to state 70


State 65

   21 when_clause: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 71


State 66

   17 case_statement: CASE IDENTIFIER IS case_clauses . ENDCASE

    ENDCASE  shift, and go to state 72


State 67

   18 case_clauses: when_clause . case_clauses

    OTHERS  shift, and go to state 64
    WHEN    shift, and go to state 65

    $default  reduce using rule 20 (case_clauses)

    case_clauses   go to state 73
    when_clause    go to state 67
    others_clause  go to state 68


State 68

   19 case_clauses: others_clause .

    $default  reduce using rule 19 (case_clauses)


State 69

   16 if_statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 74


State 70

   22 others_clause: OTHERS ARROW . statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REDUCE        shift, and go to state 22
    CASE          shift, and go to state 23
    IF            shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 75
    statement       go to state 29
    if_statement    go to state 30
    case_statement  go to state 31
    expression      go to state 32
    relation        go to state 33
    term            go to state 34
    factor          go to state 35
    primary         go to state 36


State 71

   21 when_clause: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 76


State 72

   17 case_statement: CASE IDENTIFIER IS case_clauses ENDCASE .

    $default  reduce using rule 17 (case_statement)


State 73

   18 case_clauses: when_clause case_clauses .

    $default  reduce using rule 18 (case_clauses)


State 74

   16 if_statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REDUCE        shift, and go to state 22
    CASE          shift, and go to state 23
    IF            shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 77
    statement       go to state 29
    if_statement    go to state 30
    case_statement  go to state 31
    expression      go to state 32
    relation        go to state 33
    term            go to state 34
    factor          go to state 35
    primary         go to state 36


State 75

   22 others_clause: OTHERS ARROW statement_ .

    $default  reduce using rule 22 (others_clause)


State 76

   21 when_clause: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REDUCE        shift, and go to state 22
    CASE          shift, and go to state 23
    IF            shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 78
    statement       go to state 29
    if_statement    go to state 30
    case_statement  go to state 31
    expression      go to state 32
    relation        go to state 33
    term            go to state 34
    factor          go to state 35
    primary         go to state 36


State 77

   16 if_statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 79


State 78

   21 when_clause: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 21 (when_clause)


State 79

   16 if_statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 16 (if_statement)
